// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Log.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "IM.Log.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace IM {
namespace Log {

namespace {

const ::google::protobuf::Descriptor* IMLogInReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IMLogInReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* IMLogRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IMLogRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_IM_2eLog_2eproto() {
  protobuf_AddDesc_IM_2eLog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "IM.Log.proto");
  GOOGLE_CHECK(file != NULL);
  IMLogInReq_descriptor_ = file->message_type(0);
  static const int IMLogInReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogInReq, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogInReq, password_),
  };
  IMLogInReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IMLogInReq_descriptor_,
      IMLogInReq::default_instance_,
      IMLogInReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(IMLogInReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogInReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogInReq, _is_default_instance_));
  IMLogRes_descriptor_ = file->message_type(1);
  static const int IMLogRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogRes, logres_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogRes, friend__),
  };
  IMLogRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IMLogRes_descriptor_,
      IMLogRes::default_instance_,
      IMLogRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(IMLogRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogRes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IMLogRes, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_IM_2eLog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IMLogInReq_descriptor_, &IMLogInReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IMLogRes_descriptor_, &IMLogRes::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_IM_2eLog_2eproto() {
  delete IMLogInReq::default_instance_;
  delete IMLogInReq_reflection_;
  delete IMLogRes::default_instance_;
  delete IMLogRes_reflection_;
}

void protobuf_AddDesc_IM_2eLog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::IM::Base::protobuf_AddDesc_IM_2eBase_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014IM.Log.proto\022\006IM.Log\032\rIM.Base.proto\",\n"
    "\nIMLogInReq\022\014\n\004name\030\001 \001(\t\022\020\n\010password\030\002 "
    "\001(\t\"R\n\010IMLogRes\022#\n\006logRes\030\001 \001(\0162\023.IM.Bas"
    "e.ResultType\022!\n\006friend\030\002 \003(\0132\021.IM.Base.U"
    "serInfob\006proto3", 175);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IM.Log.proto", &protobuf_RegisterTypes);
  IMLogInReq::default_instance_ = new IMLogInReq();
  IMLogRes::default_instance_ = new IMLogRes();
  IMLogInReq::default_instance_->InitAsDefaultInstance();
  IMLogRes::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_IM_2eLog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_IM_2eLog_2eproto {
  StaticDescriptorInitializer_IM_2eLog_2eproto() {
    protobuf_AddDesc_IM_2eLog_2eproto();
  }
} static_descriptor_initializer_IM_2eLog_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMLogInReq::kNameFieldNumber;
const int IMLogInReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMLogInReq::IMLogInReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Log.IMLogInReq)
}

void IMLogInReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IMLogInReq::IMLogInReq(const IMLogInReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IM.Log.IMLogInReq)
}

void IMLogInReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IMLogInReq::~IMLogInReq() {
  // @@protoc_insertion_point(destructor:IM.Log.IMLogInReq)
  SharedDtor();
}

void IMLogInReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void IMLogInReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMLogInReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IMLogInReq_descriptor_;
}

const IMLogInReq& IMLogInReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_IM_2eLog_2eproto();
  return *default_instance_;
}

IMLogInReq* IMLogInReq::default_instance_ = NULL;

IMLogInReq* IMLogInReq::New(::google::protobuf::Arena* arena) const {
  IMLogInReq* n = new IMLogInReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMLogInReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Log.IMLogInReq)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IMLogInReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Log.IMLogInReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Log.IMLogInReq.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Log.IMLogInReq.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Log.IMLogInReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Log.IMLogInReq)
  return false;
#undef DO_
}

void IMLogInReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Log.IMLogInReq)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Log.IMLogInReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Log.IMLogInReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Log.IMLogInReq)
}

::google::protobuf::uint8* IMLogInReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IM.Log.IMLogInReq)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Log.IMLogInReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Log.IMLogInReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:IM.Log.IMLogInReq)
  return target;
}

int IMLogInReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Log.IMLogInReq)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMLogInReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Log.IMLogInReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IMLogInReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IMLogInReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Log.IMLogInReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Log.IMLogInReq)
    MergeFrom(*source);
  }
}

void IMLogInReq::MergeFrom(const IMLogInReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Log.IMLogInReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void IMLogInReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Log.IMLogInReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMLogInReq::CopyFrom(const IMLogInReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Log.IMLogInReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMLogInReq::IsInitialized() const {

  return true;
}

void IMLogInReq::Swap(IMLogInReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMLogInReq::InternalSwap(IMLogInReq* other) {
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMLogInReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IMLogInReq_descriptor_;
  metadata.reflection = IMLogInReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMLogInReq

// optional string name = 1;
void IMLogInReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IMLogInReq::name() const {
  // @@protoc_insertion_point(field_get:IM.Log.IMLogInReq.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IMLogInReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Log.IMLogInReq.name)
}
 void IMLogInReq::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Log.IMLogInReq.name)
}
 void IMLogInReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Log.IMLogInReq.name)
}
 ::std::string* IMLogInReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:IM.Log.IMLogInReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IMLogInReq::release_name() {
  // @@protoc_insertion_point(field_release:IM.Log.IMLogInReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IMLogInReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:IM.Log.IMLogInReq.name)
}

// optional string password = 2;
void IMLogInReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IMLogInReq::password() const {
  // @@protoc_insertion_point(field_get:IM.Log.IMLogInReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IMLogInReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Log.IMLogInReq.password)
}
 void IMLogInReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Log.IMLogInReq.password)
}
 void IMLogInReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Log.IMLogInReq.password)
}
 ::std::string* IMLogInReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:IM.Log.IMLogInReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IMLogInReq::release_password() {
  // @@protoc_insertion_point(field_release:IM.Log.IMLogInReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IMLogInReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:IM.Log.IMLogInReq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMLogRes::kLogResFieldNumber;
const int IMLogRes::kFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMLogRes::IMLogRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Log.IMLogRes)
}

void IMLogRes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IMLogRes::IMLogRes(const IMLogRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IM.Log.IMLogRes)
}

void IMLogRes::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  logres_ = 0;
}

IMLogRes::~IMLogRes() {
  // @@protoc_insertion_point(destructor:IM.Log.IMLogRes)
  SharedDtor();
}

void IMLogRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IMLogRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMLogRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IMLogRes_descriptor_;
}

const IMLogRes& IMLogRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_IM_2eLog_2eproto();
  return *default_instance_;
}

IMLogRes* IMLogRes::default_instance_ = NULL;

IMLogRes* IMLogRes::New(::google::protobuf::Arena* arena) const {
  IMLogRes* n = new IMLogRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMLogRes::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Log.IMLogRes)
  logres_ = 0;
  friend__.Clear();
}

bool IMLogRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Log.IMLogRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .IM.Base.ResultType logRes = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logres(static_cast< ::IM::Base::ResultType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_friend;
        break;
      }

      // repeated .IM.Base.UserInfo friend = 2;
      case 2: {
        if (tag == 18) {
         parse_friend:
          DO_(input->IncrementRecursionDepth());
         parse_loop_friend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friend_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_friend;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Log.IMLogRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Log.IMLogRes)
  return false;
#undef DO_
}

void IMLogRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Log.IMLogRes)
  // optional .IM.Base.ResultType logRes = 1;
  if (this->logres() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->logres(), output);
  }

  // repeated .IM.Base.UserInfo friend = 2;
  for (unsigned int i = 0, n = this->friend__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Log.IMLogRes)
}

::google::protobuf::uint8* IMLogRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IM.Log.IMLogRes)
  // optional .IM.Base.ResultType logRes = 1;
  if (this->logres() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->logres(), target);
  }

  // repeated .IM.Base.UserInfo friend = 2;
  for (unsigned int i = 0, n = this->friend__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->friend_(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:IM.Log.IMLogRes)
  return target;
}

int IMLogRes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Log.IMLogRes)
  int total_size = 0;

  // optional .IM.Base.ResultType logRes = 1;
  if (this->logres() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logres());
  }

  // repeated .IM.Base.UserInfo friend = 2;
  total_size += 1 * this->friend__size();
  for (int i = 0; i < this->friend__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMLogRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Log.IMLogRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IMLogRes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IMLogRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Log.IMLogRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Log.IMLogRes)
    MergeFrom(*source);
  }
}

void IMLogRes::MergeFrom(const IMLogRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Log.IMLogRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  friend__.MergeFrom(from.friend__);
  if (from.logres() != 0) {
    set_logres(from.logres());
  }
}

void IMLogRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Log.IMLogRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMLogRes::CopyFrom(const IMLogRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Log.IMLogRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMLogRes::IsInitialized() const {

  return true;
}

void IMLogRes::Swap(IMLogRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMLogRes::InternalSwap(IMLogRes* other) {
  std::swap(logres_, other->logres_);
  friend__.UnsafeArenaSwap(&other->friend__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMLogRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IMLogRes_descriptor_;
  metadata.reflection = IMLogRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMLogRes

// optional .IM.Base.ResultType logRes = 1;
void IMLogRes::clear_logres() {
  logres_ = 0;
}
 ::IM::Base::ResultType IMLogRes::logres() const {
  // @@protoc_insertion_point(field_get:IM.Log.IMLogRes.logRes)
  return static_cast< ::IM::Base::ResultType >(logres_);
}
 void IMLogRes::set_logres(::IM::Base::ResultType value) {
  
  logres_ = value;
  // @@protoc_insertion_point(field_set:IM.Log.IMLogRes.logRes)
}

// repeated .IM.Base.UserInfo friend = 2;
int IMLogRes::friend__size() const {
  return friend__.size();
}
void IMLogRes::clear_friend_() {
  friend__.Clear();
}
const ::IM::Base::UserInfo& IMLogRes::friend_(int index) const {
  // @@protoc_insertion_point(field_get:IM.Log.IMLogRes.friend)
  return friend__.Get(index);
}
::IM::Base::UserInfo* IMLogRes::mutable_friend_(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Log.IMLogRes.friend)
  return friend__.Mutable(index);
}
::IM::Base::UserInfo* IMLogRes::add_friend_() {
  // @@protoc_insertion_point(field_add:IM.Log.IMLogRes.friend)
  return friend__.Add();
}
::google::protobuf::RepeatedPtrField< ::IM::Base::UserInfo >*
IMLogRes::mutable_friend_() {
  // @@protoc_insertion_point(field_mutable_list:IM.Log.IMLogRes.friend)
  return &friend__;
}
const ::google::protobuf::RepeatedPtrField< ::IM::Base::UserInfo >&
IMLogRes::friend_() const {
  // @@protoc_insertion_point(field_list:IM.Log.IMLogRes.friend)
  return friend__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Log
}  // namespace IM

// @@protoc_insertion_point(global_scope)
